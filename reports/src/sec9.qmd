```{r}
#| label: tbl-sec9-1
#| cache: true
#| cache.comments: false
#| tbl-cap: "Patients taking Ivabradin, loopdiuretics, digoxin or nitrates including molecule and dose on top of Beta-blocker, ACEi/ARNi, MRA and SGLT2i 2021-2023"
#| tbl-pos: "H"

rsdatatmp <- rsdata %>%
  filter(shf_indexyear_cat == "2021-2023" & sos_lm_sglt2i == "Yes" & sos_lm_bbl == "Yes" & sos_lm_mra == "Yes" & (sos_lm_acei == "Yes" | sos_lm_arni == "Yes"))

tabn <- rsdatatmp %>%
  count() %>%
  mutate(np = paste0(n)) %>%
  mutate(
    out = case_when(
      n < 10 ~ "<10",
      TRUE ~ np
    ),
    var = "N",
    atcvar = ""
  )

sec9func <- function(medvar) {
  tab <- rsdatatmp %>%
    filter(!is.na(!!sym(paste0("dose_sos_lm_", medvar)))) %>%
    group_by(!!sym(paste0("ATC_sos_lm_", medvar))) %>%
    reframe(
      med = quantile(!!sym(paste0("dose_sos_lm_", medvar)), na.rm = T, probs = c(0.5)),
      q1 = quantile(!!sym(paste0("dose_sos_lm_", medvar)), na.rm = T, probs = c(0.25)),
      q3 = quantile(!!sym(paste0("dose_sos_lm_", medvar)), na.rm = T, probs = c(0.75)),
      mean = mean(!!sym(paste0("dose_sos_lm_", medvar)), na.rm = T),
      sd = sd(!!sym(paste0("dose_sos_lm_", medvar)), na.rm = T),
      min = min(!!sym(paste0("dose_sos_lm_", medvar)), na.rm = T),
      max = max(!!sym(paste0("dose_sos_lm_", medvar)), na.rm = T),
      n = n()
    ) %>%
    mutate(
      np = paste0(n, " (", fn(n / tabn %>% pull(n) * 100, 1), ")"),
      out = paste0(np, ", ", fn(med, 1), " [", fn(min, 1), ", ", fn(q1, 1), ", ", fn(q3, 1), ", ", fn(max, 1), "], ", fn(mean, 1), " (", fn(sd, 1), ")"),
      out = case_when(
        n == 0 ~ "-",
        n < 10 ~ "<10",
        TRUE ~ out
      ),
      var = medvar
    ) %>%
    rename(
      atcvar = !!sym(paste0("ATC_sos_lm_", medvar))
    ) %>%
    select(var, atcvar, out) %>%
    ungroup()
}

medvars <- c("ivabradin", "loopdiuretics", "digoxin", "nitrate")

tab <- lapply(medvars,
  FUN = sec9func
)
tab <- bind_rows(tab)

tab <- tab %>%
  mutate(
    # if recoding or categorizing will still get org label
    var = factor(case_when(
      var == "ivabradin" ~ 1,
      var == "loopdiuretics" ~ 2,
      var == "digoxin" ~ 3,
      var == "nitrate" ~ 4,
    ), levels = 1:4, labels = c("Ivabradin", "Loopdiuretics", "Digoxin", "Nitrate"))
  )

tab <- left_join(tab, lmvarsub %>% select(-med), by = c("atcvar" = "atc")) %>%
  mutate(atcvar = sub) %>%
  select(-sub)

tab <- bind_rows(tabn %>% select(var, atcvar, out), tab)

colnames(tab) <- c("Medication", "Molecule", "n (%) and daily dose")

# excel
if (output) {
  make_one_xlsxsheet(tab)
}

colnames(tab) <- sanitize_text(colnames(tab))

default_kable(tab,
  escape = FALSE,
  scale_down = T
) %>%
  footnote(
    footnote_order = c("general", "symbol", "alphabet"),
    general_title = "",
    general = c(
      "Presented with n (%), median [minimum, q1, q3, maximum], mean (standard deviation)."
    )
  )
```

```{r}
#| label: sec92func
#| cache: true
#| cache.comments: false
#| dependson: tbl-sec9-1

tabn <- rsdatatmp %>%
  count() %>%
  mutate(np = paste0(n)) %>%
  mutate(
    out = case_when(
      n < 10 ~ "<10",
      TRUE ~ np
    ),
    strata = "N",
    lev = ""
  )

sec9func2 <- function(medvar) {
  tab <- rsdatatmp %>%
    count(!!sym(paste0("sos_lm_", medvar))) %>%
    mutate(np = paste0(n, " (", fn(n / sum(n) * 100, 1), ")")) %>%
    mutate(
      np = case_when(
        n == 0 ~ "-",
        n < 10 ~ "<10",
        TRUE ~ np
      ),
      strata = "Overall",
      lev = ""
    ) %>%
    filter(!!sym(paste0("sos_lm_", medvar)) == "Yes") %>%
    select(strata, lev, np)

  sec9func2_inner <- function(byvar) {
    tab <- rsdatatmp %>%
      filter(!is.na(!!sym(byvar))) %>%
      group_by(!!sym(byvar)) %>%
      count(!!sym(paste0("sos_lm_", medvar))) %>%
      mutate(np = paste0(n, " (", fn(n / sum(n) * 100, 1), ")")) %>%
      mutate(
        np = case_when(
          n == 0 ~ "-",
          n < 10 ~ "<10",
          TRUE ~ np
        ),
        strata = byvar
      ) %>%
      filter(!!sym(paste0("sos_lm_", medvar)) == "Yes") %>%
      rename(lev = !!sym(byvar)) %>%
      select(strata, lev, np) %>%
      ungroup()
  }

  tabtmp <- lapply(tabvarsel,
    FUN = sec9func2_inner
  )
  tabtmp <- bind_rows(tabtmp)

  tab <- bind_rows(tabn, tab, tabtmp)

  tab <- tab %>%
    mutate(
      # if recoding or categorizing will still get org label
      var_tmp = str_replace_all(strata, "(_cat)", "")
    )

  tab <- left_join(tab,
    metavars %>%
      select(variable, label, unit),
    by = c("var_tmp" = "variable")
  ) %>%
    mutate(
      Variable = coalesce(label, var_tmp),
      Variable = if_else(!is.na(unit),
        paste0(Variable, " (", unit, ")"),
        Variable
      ),
      Variable = paste0(Variable, " ", lev),
      order = 1:n()
    ) %>%
    select(Variable, np)

  colnames(tab) <- c("Strata", "n (%)")

  # excel
  if (output) {
    make_one_xlsxsheet(tab)
  }

  colnames(tab) <- sanitize_text(colnames(tab))

  tab <- tab %>%
    mutate(
      Strata = sanitize_text(Strata),
      Strata = str_replace_all(Strata, fixed("Â²"), "\\textsuperscript{2}"),
      Strata = str_replace_all(Strata, fixed("$>$="), "$\\geq$"),
      Strata = str_replace_all(Strata, fixed("$<$="), "$\\leq$")
    )

  default_kable(tab,
    escape = FALSE,
    scale_down = F
  ) %>%
    footnote(
      footnote_order = c("general", "symbol", "alphabet"),
      general_title = "",
      general = c(
        "Presented with n (%)."
      ),
      threeparttable = T
    ) %>%
    row_spec(1, hline_after = T)
}
```

```{r}
#| label: tbl-sec9-ivabradin
#| cache: true
#| cache.comments: false
#| dependson: tbl-sec9-1, sec92func
#| tbl-cap: "Patients taking Ivabradin on top of Beta-blocker, ACEi/ARNi, MRA and SGLT2i by characteristics 2021-2023"
#| tbl-pos: "H"

sec9func2("ivabradin")
```

```{r}
#| label: tbl-sec9-loopdiuretics
#| cache: true
#| cache.comments: false
#| dependson: tbl-sec9-1, sec92func
#| tbl-cap: "Patients taking loopdiuretics on top of Beta-blocker, ACEi/ARNi, MRA and SGLT2i by characteristics 2021-2023"
#| tbl-pos: "H"

sec9func2("loopdiuretics")
```

```{r}
#| label: tbl-sec9-digoxin
#| cache: true
#| cache.comments: false
#| dependson: tbl-sec9-1, sec92func
#| tbl-cap: "Patients taking digoxin on top of Beta-blocker, ACEi/ARNi, MRA and SGLT2i by characteristics 2021-2023"
#| tbl-pos: "H"

sec9func2("digoxin")
```

```{r}
#| label: tbl-sec9-nitrate
#| cache: true
#| cache.comments: false
#| dependson: tbl-sec9-1, sec92func
#| tbl-cap: "Patients taking nitrates on top of Beta-blocker, ACEi/ARNi, MRA and SGLT2i by characteristics 2021-2023"
#| tbl-pos: "H"

sec9func2("nitrate")
```
