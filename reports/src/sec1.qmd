```{r}
#| label: outcomesfunc
#| cache: true
#| cache.comments: false

coxvars <- modvars
coxvars[modvars %in% stratavars] <- paste0("strata(", coxvars[modvars %in% stratavars], ")")

outcomesfunc <- function(data = rsdata, impdata = imprsdata, time, event, eventname, xvar = "sos_lm_gdmt",
                         novars = NULL) {
  coxvars <- setdiff(coxvars, novars)

  levs <- levels(data %>% pull(!!sym(xvar)))
  nlevs <- length(levs)

  nrows <- 3
  out <- data.frame(matrix(NA, ncol = 2 + nlevs, nrow = nrows))
  colnames(out) <- c("Outcome", "Model", levs)

  out[1, 1] <- eventname

  ## incidence rate
  out[1, 2] <- "No events, sum py, events/100py (95% CI)"

  # 1 row - incidence
  ev <- data %>%
    group_by(!!sym(xvar)) %>%
    summarise(
      ev = sum(!!sym(event) == "Yes"),
      s = sum(!!sym(time) / 365.25),
      .groups = "drop"
    )

  r <- pois.exact(x = ev$ev, pt = ev$s / 100)

  out[1, 3:(nlevs + 2)] <- paste0(
    ev$ev, ", ",
    fn(ev$s, dig = 0), ", ",
    fn(r$rate, dig = 0), " (",
    fn(r$lower, dig = 0), "-",
    fn(r$upper, dig = 0), ")"
  )


  ## 2 row - crude regression
  out[2, 2] <- "Crude Hazard Ratio (95% CI), p-value"
  mod <- summary(coxph(formula(paste0("Surv(", time, ",", event, "== 'Yes') ~ ", xvar)),
    data = data
  ))

  out[2, 3:(nlevs + 2)] <- c(
    "reference",
    paste0(
      fn(mod$conf.int[, "exp(coef)"], dig = 2),
      " (", fn(mod$conf.int[, "lower .95"], dig = 2),
      "-", fn(mod$conf.int[, "upper .95"], dig = 2), "), ",
      fn(mod$coef[, "Pr(>|z|)"], dig = 3, p = TRUE)
    )
  )

  ## 3 row - adjusted regression
  out[3, 2] <- "Adjusted Hazard Ratio (95% CI), p-value"
  # mod <- summary(pool(with(impdata, coxph(formula(paste0(
  #  "Surv(", time, ",", event, " == 'Yes') ~ ", xvar, "+", paste(coxvars, collapse = " + ")
  # ))))))

  # out[3, 3:(nlevs + 2)] <- c(
  # "reference",
  #  paste0(
  #    fn(exp(mod$estimate[1:(nlevs - 1)]), dig = 2),
  #    " (", fn(exp(mod$estimate[1:(nlevs - 1)] - global_z05 * mod$std.error[1:(nlevs - 1)]), dig = 2),
  #    "-", fn(exp(mod$estimate[1:(nlevs - 1)] + global_z05 * mod$std.error[1:(nlevs - 1)]), dig = 2), "), ",
  #    fn(mod$p.value[1:(nlevs - 1)], dig = 3, p = TRUE)
  #  )
  # )

  return(out)
}

outcomesfunc_outer <- function(byvar, lev, byvarname, novars) {
  if (is.null(byvar)) {
    data <- rsdata
    # impdata <- imprsdata
  } else {
    novars <- c(byvar, novars)

    data <- rsdata %>% filter(!!sym(byvar) == lev)
    # impdata <- mice::filter(imprsdata, rsdata %>% pull(!!sym(byvar)) == lev)
  }

  out1 <- outcomesfunc(
    data = data,
    impdata = impdata,
    time = outvars$time[1],
    event = outvars$var[1],
    eventname = outvars$shortname[1],
    novars = novars
  )
  out2 <- outcomesfunc(
    data = data,
    impdata = impdata,
    time = outvars$time[2],
    event = outvars$var[2],
    eventname = outvars$shortname[2],
    novars = novars
  )
  out3 <- outcomesfunc(
    data = data,
    impdata = impdata,
    time = outvars$time[3],
    event = outvars$var[3],
    eventname = outvars$shortname[3],
    novars = novars
  )
  outall <- rbind(out1, out2, out3)

  outall <- outall %>%
    add_column(
      Strata = c(paste0(byvarname, " ", lev), rep(NA, (nrow(outall) - 1))),
      .before = 1
    )
}

outcomesfunc_outer2 <- function(byvar, byvarname, novars = NULL) {
  out <- lapply(levels(rsdata %>% pull(!!sym(byvar))),
    FUN = outcomesfunc_outer,
    byvar = byvar, byvarname = byvarname, novars = novars
  )

  out <- bind_rows(out)
}
```

\blandscape
```{r}
#| label: tbl-sec1
#| cache: true
#| cache.comments: false
#| dependson: outcomesfunc
#| tbl-cap: "Association between outcomes and therapy"

overall <- outcomesfunc_outer(byvar = NULL, lev = NULL, byvarname = "Overall", novars = NULL)

### OBS!!! MÅSTE FIXA IMPRSDATA SÅ SUBSET!!!!!!
sos_prevhfh3mo <- outcomesfunc_outer2(byvar = "sos_prevhfh3mo", byvarname = "HFH within 3 months")

sos_hospward_3mo <- outcomesfunc_outer2(byvar = "sos_hospward_3mo", byvarname = "HFH", novars = "sos_prevhfh3mo")

age <- outcomesfunc_outer2(byvar = "shf_age_cat", byvarname = "Age")

sex <- outcomesfunc_outer2(byvar = "shf_sex", byvarname = "")

cci <- outcomesfunc_outer2(byvar = "sos_com_charlsonci_cat", byvarname = "CCI")

meds <- outcomesfunc_outer2(byvar = "n_othermeds_cat", byvarname = "Other medications")

outall <- bind_rows(overall, sos_prevhfh3mo, sos_hospward_3mo, age, sex, cci, meds)

if (output) {
  make_one_xlsxsheet(outall)
}

default_kable(outall,
  longtable = TRUE,
  font_size = 4.5
) %>%
  footnote(
    footnote_order = c("general", "symbol", "alphabet"),
    general_title = "",
    general = c(
      "Abbreviations: py, person-years"
    ),
    threeparttable = T
  )
```
\elandscape

```{r}
#| label: kmfunc
#| cache: true
#| cache.comments: false

kmfunc <- function(time, event, eventname) {
  levs <- levels(rsdata %>% pull(sos_lm_gdmt))
  nlevs <- length(levs)

  fit <- survfit(formula(paste0("Surv(", time, ",", event, "== 'Yes') ~ sos_lm_gdmt")),
    data = rsdata
  )

  s <- summary(fit, times = seq(0, global_followup, 1), extend = T)

  plot_data <- tibble(
    "time" = s$time,
    "n.risk" = s$n.risk,
    "n.event" = s$n.event,
    "n.censor" = s$n.censor,
    "estimate" = 1 - s$surv,
    "strata" = s$strata
  ) %>%
    mutate(
      strata = fct_rev(fct_inorder(str_remove_all(strata, "sos_lm_gdmt="))),
    )
  ylim <- c(0, 1)
  ylab <- paste0(eventname, " (%)")

  p <- ggplot(plot_data, aes(x = time / 365.25, y = estimate, color = strata)) +
    geom_step(aes(linetype = strata), linewidth = 1) +
    scale_color_manual(values = c(global_cols[1:5])) +
    # scale_x_continuous(breaks = seq(0, endfollow, 1), limits = c(0, endfollow), expand = c(0, 0)) +
    # scale_y_continuous(labels = scales::label_percent(suffix = ""), limits = c(0, 1), expand = c(0, 0)) +
    scale_x_continuous(breaks = seq(0, global_followup_year, 1), limits = c(0, global_followup_year)) +
    scale_y_continuous(labels = scales::label_percent(suffix = ""), limits = ylim) +
    theme_classic() +
    theme(
      text = element_text(size = 20, face = "bold"),
      legend.position = c(.8, .8),
      legend.title = element_blank(),
      axis.text = element_text(color = "black"),
    ) +
    labs(x = "Follow-up (years)", y = ylab)

  # n at risk
  table_data <- plot_data %>%
    filter(
      time %in% c(seq(0, global_followup_year, 1) * 365)
    )

  t <- ggplot(table_data, aes(y = strata, x = time / 365.25)) +
    geom_text(aes(label = n.risk), size = 6, fontface = "bold", colour = rep(global_cols[5:1], each = 4)) +
    # scale_x_continuous(breaks = seq(0, endfollow, 1), limits = c(0, endfollow), expand = c(0, 0)) +
    # scale_y_discrete(expand = c(0, 0)) +
    scale_x_continuous(breaks = seq(0, global_followup_year, 1), limits = c(0, global_followup_year)) +
    coord_cartesian(xlim = c(0, global_followup_year), clip = "off") +
    labs(
      subtitle = "No. at risk"
    ) +
    theme(
      text = element_text(size = 20, face = "bold"),
      plot.caption = element_text(size = 20, face = "bold"),
      panel.background = element_blank(),
      axis.text.x = element_blank(),
      axis.ticks = element_blank(),
      axis.title = element_blank(),
      # plot.margin = unit(c(0, 1, 0, 3), "cm"), # trouble
      # axis.text.y = element_blank()
      # axis.text.y = element_text(margin = margin(0, 0, 0, 100))
      axis.text.y = element_text(hjust = 0, colour = global_cols[1:4], face = "bold")
    )

  km <- (p / t) + plot_layout(height = c(1, .25))
  if (output) {
    create_pptx(km)
  }
  km
}
```

```{r}
#| label: fig-sec1
#| cache: true
#| cache.comments: false
#| dependson: kmfunc
#| fig-cap: "Cumulative incidence"
#| fig-subcap: !expr outvars$name
#| layout-ncol: 2
#| layout-nrow: 2

nr <- 1
kmfunc(
  time = outvars$time[nr],
  event = outvars$var[nr],
  eventname = outvars$shortname[nr]
)
nr <- 2
kmfunc(
  time = outvars$time[nr],
  event = outvars$var[nr],
  eventname = outvars$shortname[nr]
)
nr <- 3
kmfunc(
  time = outvars$time[nr],
  event = outvars$var[nr],
  eventname = outvars$shortname[nr]
)
```
