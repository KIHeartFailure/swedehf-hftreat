
```{r}
#| label: primaryfunc
#| cache: true
#| cache.comments: false

primaryfunc2 <- function(data = rsdata, colvar = NULL, yearvar = "shf_indexyear_cat") {
  if (is.null(colvar)) {
    tab <- data %>%
      filter(!is.na(sos_lm_gdmttype)) %>%
      group_by(!!sym(yearvar)) %>%
      count(sos_lm_gdmttype) %>%
      mutate(np = paste0(n, " (", fn(n / sum(n) * 100, 1), ")")) %>%
      mutate(
        np = case_when(
          n < 10 ~ "<10",
          TRUE ~ np
        )
      ) %>%
      select(!!sym(yearvar), sos_lm_gdmttype, np) %>%
      ungroup() %>%
      pivot_wider(values_from = np, names_from = !!sym(yearvar)) %>%
      rename(Medication = sos_lm_gdmttype) %>%
      arrange(Medication)

    taball <- data %>%
      filter(!is.na(sos_lm_gdmttype)) %>%
      count(!!sym(yearvar)) %>%
      mutate(np = paste0(n)) %>%
      mutate(
        Medication = "N",
        np = case_when(
          n < 10 ~ "<10",
          TRUE ~ np
        )
      ) %>%
      select(!!sym(yearvar), Medication, np) %>%
      pivot_wider(values_from = np, names_from = !!sym(yearvar)) %>%
      arrange(Medication)

    tab <- bind_rows(taball, tab)
  } else {
    tab <- data %>%
      filter(!is.na(sos_lm_gdmttype) & !is.na(!!sym(colvar))) %>%
      group_by(!!sym(yearvar), !!sym(colvar), .drop = F) %>%
      count(sos_lm_gdmttype) %>%
      mutate(np = paste0(n, " (", fn(n / sum(n) * 100, 1), ")")) %>%
      ungroup() %>%
      mutate(
        np = case_when(
          n < 10 ~ "<10",
          TRUE ~ np
        ),
        np = if_else(str_detect(sos_lm_gdmttype, "SGLT2i") & !!sym(yearvar) %in% c("2016-2020", as.character(2016:2020)), NA_character_, np)
      ) %>%
      select(!!sym(yearvar), sos_lm_gdmttype, np, !!sym(colvar)) %>%
      pivot_wider(values_from = np, names_from = c(!!sym(colvar), !!sym(yearvar))) %>%
      rename(Medication = sos_lm_gdmttype) %>%
      arrange(Medication)

    taball <- data %>%
      filter(!is.na(sos_lm_gdmttype) & !is.na(!!sym(colvar))) %>%
      count(!!sym(yearvar), !!sym(colvar), drop = F) %>%
      mutate(
        np = paste0(n),
        Medication = "N",
        np = case_when(
          n < 10 ~ "<10",
          TRUE ~ np
        )
      ) %>%
      select(!!sym(yearvar), Medication, np, !!sym(colvar)) %>%
      pivot_wider(values_from = np, names_from = c(!!sym(colvar), !!sym(yearvar)))

    tab <- bind_rows(taball, tab)

    colnames(tab) <- str_remove_all(colnames(tab), "_2016-2020|_2021-2023")
  }

  # excel
  if (output) {
    make_one_xlsxsheet(tab)
  }

  colnames(tab) <- sanitize_text(colnames(tab))
  colnames(tab) <- str_replace_all(colnames(tab), fixed("$>$="), "$\\geq$")
  colnames(tab) <- str_replace_all(colnames(tab), fixed("$<$="), "$\\leq$")

  tabprint <- default_kable(tab,
    escape = FALSE,
    scale_down = T,
    font_size = 7
  ) %>%
    footnote(
      footnote_order = c("general", "symbol", "alphabet"),
      general_title = "",
      general = c(
        "Presented with n (%)."
      )
    ) %>%
    row_spec(1, hline_after = T)

  if (!is.null(colvar)) {
    if (colvar != "shf_indexyear") {
      nlevs <- nlevels(data %>% pull(!!sym(colvar)))
      tabprint <- tabprint %>%
        add_header_above(c(" " = 1, "2016-2020" = nlevs, "2021-2023" = nlevs))
    }
  }
  tabprint
}

rsdata <- rsdata %>%
  mutate(
    # 2-way combinations
    sos_lm_bblrasiarni = ynfac(if_else(sos_lm_rasiarni == "Yes" & sos_lm_bbl == "Yes", 1, 0)),
    sos_lm_bblmra = ynfac(if_else(sos_lm_mra == "Yes" & sos_lm_bbl == "Yes", 1, 0)),
    sos_lm_bblsglt2i = ynfac(if_else(sos_lm_sglt2i == "Yes" & sos_lm_bbl == "Yes", 1, 0)),
    sos_lm_rasiarnimra = ynfac(if_else(sos_lm_rasiarni == "Yes" & sos_lm_mra == "Yes", 1, 0)),
    sos_lm_rasiarnisglt2i = ynfac(if_else(sos_lm_rasiarni == "Yes" & sos_lm_sglt2i == "Yes", 1, 0)),
    sos_lm_mrasglt2i = ynfac(if_else(sos_lm_mra == "Yes" & sos_lm_sglt2i == "Yes", 1, 0)),

    # 3-way combinations
    sos_lm_bblrasiarnimra = ynfac(if_else(sos_lm_rasiarni == "Yes" & sos_lm_bbl == "Yes" & sos_lm_mra == "Yes", 1, 0)),
    sos_lm_bblrasiarnisglt2i = ynfac(if_else(sos_lm_rasiarni == "Yes" & sos_lm_bbl == "Yes" & sos_lm_sglt2i == "Yes", 1, 0)),
    sos_lm_bblmrasglt2i = ynfac(if_else(sos_lm_sglt2i == "Yes" & sos_lm_bbl == "Yes" & sos_lm_mra == "Yes", 1, 0)),
    sos_lm_rasiarnimrasglt2i = ynfac(if_else(sos_lm_rasiarni == "Yes" & sos_lm_sglt2i == "Yes" & sos_lm_mra == "Yes", 1, 0)),

    # 4-way combinations
    sos_lm_bblrasiarnimrasglt2i = ynfac(if_else(sos_lm_rasiarni == "Yes" & sos_lm_bbl == "Yes" & sos_lm_mra == "Yes" & sos_lm_sglt2i == "Yes", 1, 0)),
  )

medvars <- c(
  "sos_lm_bbl", "sos_lm_rasiarni", "sos_lm_mra",
  "sos_lm_sglt2i",
  "sos_lm_bblrasiarni", "sos_lm_bblmra",
  "sos_lm_bblsglt2i",
  "sos_lm_rasiarnimra",
  "sos_lm_rasiarnisglt2i",
  "sos_lm_mrasglt2i",
  "sos_lm_bblrasiarnimra",
  "sos_lm_bblrasiarnisglt2i",
  "sos_lm_bblmrasglt2i",
  "sos_lm_rasiarnimrasglt2i", "sos_lm_bblrasiarnimrasglt2i"
)

primaryfunc_inner <- function(data, colvar, medvar, yearvar) {
  if (is.null(colvar)) {
    tab <- data %>%
      group_by(!!sym(yearvar)) %>%
      count(!!sym(medvar)) %>%
      mutate(np = paste0(n, " (", fn(n / sum(n) * 100, 1), ")")) %>%
      mutate(
        np = case_when(
          n < 10 ~ "<10",
          TRUE ~ np
        ),
        Medication = medvar
      ) %>%
      filter(!!sym(medvar) == "Yes") %>%
      select(!!sym(yearvar), Medication, np) %>%
      ungroup() %>%
      pivot_wider(values_from = np, names_from = !!sym(yearvar))
  } else {
    tab <- data %>%
      filter(!is.na(!!sym(colvar))) %>%
      group_by(!!sym(yearvar), !!sym(colvar), .drop = F) %>%
      count(!!sym(medvar)) %>%
      mutate(np = paste0(n, " (", fn(n / sum(n) * 100, 1), ")")) %>%
      ungroup() %>%
      mutate(
        np = case_when(
          n < 10 ~ "<10",
          TRUE ~ np
        ),
        np = if_else(str_detect(medvar, "sglt2i") & !!sym(yearvar) %in% c("2016-2020", as.character(2016:2020)), NA_character_, np),
        Medication = medvar
      ) %>%
      filter(!!sym(medvar) == "Yes") %>%
      select(!!sym(yearvar), Medication, np, !!sym(colvar)) %>%
      pivot_wider(values_from = np, names_from = c(!!sym(colvar), !!sym(yearvar)))
  }
}

primaryfunc <- function(data = rsdata, colvar = NULL, yearvar = "shf_indexyear_cat") {
  tabtmp <- lapply(medvars,
    FUN = primaryfunc_inner, data = data, colvar = colvar, yearvar = yearvar
  )

  tabtmp <- bind_rows(tabtmp)

  if (is.null(colvar)) {
    taball <- data %>%
      filter(!is.na(sos_lm_gdmttype)) %>%
      count(!!sym(yearvar)) %>%
      mutate(np = paste0(n)) %>%
      mutate(
        np = case_when(
          n < 10 ~ "<10",
          TRUE ~ np
        ),
        Medication = "N"
      ) %>%
      select(!!sym(yearvar), Medication, np) %>%
      pivot_wider(values_from = np, names_from = !!sym(yearvar))

    tab <- bind_rows(taball, tabtmp)
  } else {
    taball <- data %>%
      filter(!is.na(!!sym(colvar))) %>%
      count(!!sym(yearvar), !!sym(colvar), drop = F) %>%
      mutate(
        np = paste0(n),
        np = case_when(
          n < 10 ~ "<10",
          TRUE ~ np
        ),
        Medication = "N"
      ) %>%
      select(!!sym(yearvar), Medication, np, !!sym(colvar)) %>%
      pivot_wider(values_from = np, names_from = c(!!sym(colvar), !!sym(yearvar)))

    tab <- bind_rows(taball, tabtmp)
  }
  tab <- tab %>%
    mutate(
      Medication = str_remove_all(Medication, "sos_lm_"),
      Medication = str_replace_all(Medication, "bbl", "Beta-blocker "),
      Medication = str_replace_all(Medication, "rasiarni", "RASi/ARNi "),
      Medication = str_replace_all(Medication, "mra", "MRA "),
      Medication = str_replace_all(Medication, "sglt2i", "SGLT2i "),
      Medication = str_squish(Medication),
      Medication = str_replace_all(Medication, " ", " + ")
    )

  if (!is.null(colvar)) {
    colnames(tab) <- str_remove_all(colnames(tab), "_2016-2020|_2021-2023")
  }

  # excel
  if (output) {
    make_one_xlsxsheet(tab)
  }

  colnames(tab) <- sanitize_text(colnames(tab))
  colnames(tab) <- str_replace_all(colnames(tab), fixed("$>$="), "$\\geq$")
  colnames(tab) <- str_replace_all(colnames(tab), fixed("$<$="), "$\\leq$")

  tabprint <- default_kable(tab,
    escape = FALSE,
    scale_down = T,
    font_size = 7
  ) %>%
    footnote(
      footnote_order = c("general", "symbol", "alphabet"),
      general_title = "",
      general = c(
        "Presented with n (%).",
        "The groups are not mutually exclusive and the percent will therfore not sum to 100."
      )
    ) %>%
    row_spec(1, hline_after = T)

  if (!is.null(colvar)) {
    if (colvar != "shf_indexyear") {
      nlevs <- nlevels(data %>% pull(!!sym(colvar)))
      tabprint <- tabprint %>%
        add_header_above(c(" " = 1, "2016-2020" = nlevs, "2021-2023" = nlevs))
    }
  }
  tabprint
}
```

```{r}
#| label: tbl-primary
#| cache: true
#| cache.comments: false
#| dependson: primaryfunc
#| tbl-cap: "Primary objective"
#| tbl-pos: "H"

primaryfunc()
```

```{r}
#| label: tbl-primary2
#| cache: true
#| cache.comments: false
#| dependson: primaryfunc
#| tbl-cap: "Primary objective (mutually exclusive groups)"
#| tbl-pos: "H"

primaryfunc2()
```

\clearpage

```{r}
#| label: tbl-primary-year
#| cache: true
#| cache.comments: false
#| dependson: primaryfunc
#| tbl-cap: "Primary objective by year"
#| tbl-pos: "H"

rsdatatmp <- rsdata %>%
  mutate(shf_indexyear = factor(shf_indexyear))
primaryfunc(data = rsdatatmp, yearvar = "shf_indexyear")
```

```{r}
#| label: tbl-primary-year2
#| cache: true
#| cache.comments: false
#| dependson: primaryfunc
#| tbl-cap: "Primary objective by year (mutually exclusive groups)"
#| tbl-pos: "H"

rsdatatmp <- rsdata %>%
  mutate(shf_indexyear = factor(shf_indexyear))
primaryfunc2(data = rsdatatmp, yearvar = "shf_indexyear")
```

\clearpage

```{r}
#| label: tbl-primary-prevhfhf
#| cache: true
#| cache.comments: false
#| dependson: primaryfunc
#| tbl-cap: "Primary objective by previous HFH within 3 months"
#| tbl-pos: "H"

primaryfunc(colvar = "sos_prevhfh3mo")
```

```{r}
#| label: tbl-primary-prevhfhf2
#| cache: true
#| cache.comments: false
#| dependson: primaryfunc
#| tbl-cap: "Primary objective by previous HFH within 3 months (mutually exclusive groups)"
#| tbl-pos: "H"

primaryfunc2(colvar = "sos_prevhfh3mo")
```

\clearpage

```{r}
#| label: tbl-primary-hospward
#| cache: true
#| cache.comments: false
#| dependson: primaryfunc
#| tbl-cap: "Primary objective by area of previous HFH within 3 months"
#| tbl-pos: "H"

primaryfunc(colvar = "sos_hospward_3mo")
```

```{r}
#| label: tbl-primary-hospward2
#| cache: true
#| cache.comments: false
#| dependson: primaryfunc
#| tbl-cap: "Primary objective by area of previous HFH within 3 months (mutually exclusive groups)"
#| tbl-pos: "H"

primaryfunc2(colvar = "sos_hospward_3mo")
```

\clearpage

```{r}
#| label: tbl-primary-age
#| cache: true
#| cache.comments: false
#| dependson: primaryfunc
#| tbl-cap: "Primary objective by age"
#| tbl-pos: "H"

primaryfunc(colvar = "shf_age_cat")
```

```{r}
#| label: tbl-primary-age2
#| cache: true
#| cache.comments: false
#| dependson: primaryfunc
#| tbl-cap: "Primary objective by age (mutually exclusive groups)"
#| tbl-pos: "H"

primaryfunc2(colvar = "shf_age_cat")
```

\clearpage

```{r}
#| label: tbl-primary-sex
#| cache: true
#| cache.comments: false
#| dependson: primaryfunc
#| tbl-cap: "Primary objective by sex"
#| tbl-pos: "H"

primaryfunc(colvar = "shf_sex")
```

```{r}
#| label: tbl-primary-sex2
#| cache: true
#| cache.comments: false
#| dependson: primaryfunc
#| tbl-cap: "Primary objective by sex (mutually exclusive groups)"
#| tbl-pos: "H"

primaryfunc2(colvar = "shf_sex")
```

\clearpage

```{r}
#| label: tbl-primary-cci
#| cache: true
#| cache.comments: false
#| dependson: primaryfunc
#| tbl-cap: "Primary objective by CCI"
#| tbl-pos: "H"

primaryfunc(colvar = "sos_com_charlsonci_cat")
```

```{r}
#| label: tbl-primary-cci2
#| cache: true
#| cache.comments: false
#| dependson: primaryfunc
#| tbl-cap: "Primary objective by CCI (mutually exclusive groups)"
#| tbl-pos: "H"

primaryfunc2(colvar = "sos_com_charlsonci_cat")
```

\clearpage

```{r}
#| label: tbl-primary-meds
#| cache: true
#| cache.comments: false
#| dependson: primaryfunc
#| tbl-cap: "Primary objective by number of other medications"
#| tbl-pos: "H"

primaryfunc(colvar = "sos_lm_n_othermeds_cat")
```

```{r}
#| label: tbl-primary-meds2
#| cache: true
#| cache.comments: false
#| dependson: primaryfunc
#| tbl-cap: "Primary objective by number of other medications (mutually exclusive groups)"
#| tbl-pos: "H"

primaryfunc2(colvar = "sos_lm_n_othermeds_cat")
```
